import streamlit as st
import pandas as pd
from config import generate_sql
from config import MAPPING_FILE_PATH

# Load Excel for MBR
excel_path = 'output_json.xlsx'  # Replace with your actual path
mbr_df = pd.read_excel(excel_path)

def dynamic_sql_app():
    st.title("âš¡ Dynamic SQL Generator")

    with st.sidebar:
        st.title("Dynamic SQL App")
        st.markdown("Quickly generate Teradata SQL from natural language queries.")

    st.write("Generate SQL queries effortlessly.")

    mappings_df = pd.read_excel(MAPPING_FILE_PATH, sheet_name="Sheet1")

    user_query = st.text_area("Enter your query/request to generate SQL:")

    if st.button("Generate SQL"):
        if user_query:
            sql = generate_sql(
                user_query=user_query,
                dashboard_field=mappings_df["Dashboard"],
                solr_field=mappings_df["SOLR"],
                teradata_field=mappings_df["Teradata"]
            )
            st.subheader("Generated Teradata SQL:")
            st.code(sql, language="sql")
        else:
            st.warning("Please enter a query.")

def view_mbr_dict():
    st.title("ðŸ“– View MBR Dictionary")
    st.dataframe(mbr_df)

def create_mbr_dict():
    st.title("âœ¨ Create MBR Dictionary")
    st.write("Logic for creating MBR dictionary will be implemented here.")


def update_mbr():
    st.title("ðŸ”„ Update MBR Dictionary")
    st.write("Logic for updating MBR dictionary will be implemented here.")


# Main application with left-side navigation
st.sidebar.title("ðŸš€ Navigation")
option = st.sidebar.radio("Choose an option:", [
    "Dynamic SQL App", 
    "View MBR Dict",
    "Create MBR Dict",
    "Update MBR"
])

# Navigation
if option == "Dynamic SQL App":
    dynamic_sql_app()
elif option == "View MBR Dict":
    view_mbr_dict()
elif option == "Create MBR Dict":
    create_mbr_dict()
elif option == "Update MBR":
    update_mbr()
